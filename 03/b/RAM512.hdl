// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, 
        sel=address[6..8], 
        a=load0Out, 
        b=load1Out, 
        c=load2Out, 
        d=load3Out, 
        e=load4Out, 
        f=load5Out, 
        g=load6Out, 
        h=load7Out);

    RAM64(in=in, load=load0Out, address=address[0..5], out=out0);
    RAM64(in=in, load=load1Out, address=address[0..5], out=out1);
    RAM64(in=in, load=load2Out, address=address[0..5], out=out2);
    RAM64(in=in, load=load3Out, address=address[0..5], out=out3);
    RAM64(in=in, load=load4Out, address=address[0..5], out=out4);
    RAM64(in=in, load=load5Out, address=address[0..5], out=out5);
    RAM64(in=in, load=load6Out, address=address[0..5], out=out6);
    RAM64(in=in, load=load7Out, address=address[0..5], out=out7);

    Mux8Way16(a=out0,
        b=out1, 
        c=out2, 
        d=out3, 
        e=out4, 
        f=out5, 
        g=out6, 
        h=out7, 
        sel=address[6..8], 
        out=out);
}